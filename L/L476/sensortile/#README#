set pagination off
set logging overwrite on
set logging file rssi_bat_disc.log
set logging redirect on
set logging on
x/3903xb 0x20010000


set pagination off
set logging overwrite on
set logging file accevent.log
set logging redirect on
set logging on
x/680xb 0x10000000

set pagination off
set logging overwrite on
set logging file audio.log
set logging redirect on
set logging on
x/1335xb 0x10000000

set pagination off
set logging overwrite on
set logging file l2.log
set logging redirect on
set logging on
x/2082xb 0x10000000

set pagination off
set logging overwrite on
set logging file cs.log
set logging redirect on
set logging on
x/1194xb 0x10000000

set pagination off
set logging overwrite on
set logging file py.log
set logging redirect on
set logging on
x/3383xb 0x10000000

set pagination off
set logging overwrite on
set logging file cs3.log
set logging redirect on
set logging on
x/16639xb 0x10000000

set pagination off
set logging overwrite on
set logging file pi.log
set logging redirect on
set logging on
x/1871xb 0x10000000

set pagination off
set logging overwrite on
set logging file cs5.log
set logging redirect on
set logging on
x/3156xb 0x10000000

set pagination off
set logging overwrite on
set logging file cs6.log
set logging redirect on
set logging on
x/2029xb 0x10000000

set pagination off
set logging overwrite on
set logging file goodcs.log
set logging redirect on
set logging on
x/32768xb 0x10000000

set pagination off
set logging overwrite on
set logging file badcs.log
set logging redirect on
set logging on
x/456xb 0x10000000

set pagination off
set logging overwrite on
set logging file goodcs2.log
set logging redirect on
set logging on
x/6662xb 0x10000000

set pagination off
set logging overwrite on
set logging file envx2.log
set logging redirect on
set logging on
x/2552xb 0x10000000


# audio dump. x/<nsamps>h
set pagination off
set logging overwrite on
set logging file 700.txt
set logging redirect on
set logging on
x/962h 0x20000f24

set pagination off
set logging overwrite on
set logging file cs7.log
set logging redirect on
set logging on
x/32244xb 0x10000000

set pagination off
set logging overwrite on
set logging file dbg.log
set logging redirect on
set logging on
x/257xb 0x10000000

set pagination off
set logging overwrite on
set logging file scan.log
set logging redirect on
set logging on
x/633xb 0x10000000


set pagination off
set logging overwrite on
set logging file scan2.log
set logging redirect on
set logging on
x/329xb 0x10000000

set pagination off
set logging overwrite on
set logging file scan3.log
set logging redirect on
set logging on
x/2012xb 0x10000000

set pagination off
set logging overwrite on
set logging file scan4.log
set logging redirect on
set logging on
x/14034xb 0x10000000

set pagination off
set logging overwrite on
set logging file scan5.log
set logging redirect on
set logging on
x/797xb 0x10000000

set pagination off
set logging overwrite on
set logging file scan6.log
set logging redirect on
set logging on
x/5192xb 0x10000000

set pagination off
set logging overwrite on
set logging file scan7.log
set logging redirect on
set logging on
x/7174xb 0x10000000

set pagination off
set logging overwrite on
set logging file char.log
set logging redirect on
set logging on
x/642xb 0x10000000

set pagination off
set logging overwrite on
set logging file char2.log
set logging redirect on
set logging on
x/533xb 0x10000000

set pagination off
set logging overwrite on
set logging file char3.log
set logging redirect on
set logging on
x/4542xb 0x10000000


set pagination off
set logging overwrite on
set logging file aud.log
set logging redirect on
set logging on
x/8929xb 0x10000000

# convert to raw
~/ruby/samp2bin.rb 700.txt 700.raw
# convert to wav
sox -r 48k -e signed -b 16 700.raw 700.wav

# IRQs.
The AIRCR @
(gdb) x/x 0xe000ed0c
0xe000ed0c:	0xfa050300

reports that PRIGROUP = 3 ((10:8) = 3)

that implies:

Group pri [7:4] sub pri [3:0]

embedded lib sets IPRIx = 16#10# thats a tidge aggressive for our needs

-- vvv force PRI to be 16#20#
s-bbbosu.adb:~121
   function To_PRI (P : Integer) return PRI is
      (if P not in Interrupt_Priority then 0
      else PRI (32));

        --      else PRI (Interrupt_Priority'Last - P + 1) * 16);

On SAI
PLL1SAI -> SAI2
SAI2_A used as master w/clk out
SAI2.ACR1.MCJDIV[3:0]: 2
SAI2.ACR1.NODIV: 0
SAI2.ACR1.DMAEN: 1
SAI2.ACR1.SAIAEN: 1
SAI2.ACR1.OutDri: 1
SAI2.ACR1.MONO: 0
SAI2.ACR1.SYNCEN[1:0]: 0
SAI2.ACR1.CKSTR: 0
SAI2.ACR1.LSBFIRST: 0
SAI2.ACR1.DS[2:0]: 4
SAI2.ACR1.PRTCFG[1:0]: 0
SAI2.ACR1.MODE[1:0]: 0
SAI2.ACR2.COMP[1:0]: 0
SAI2.ACR2.CPL: 0
SAI2.ACR2.MUTECN[5:0]: 0
SAI2.ACR2.MUTEVAL: 0
SAI2.ACR2.MUTE: 0
SAI2.ACR2.TRIS: 0
SAI2.ACR2.FFLUS: 0
SAI2.ACR2.FTH[2:0]: 1
SAI2.AFRCR.FSOFF: 1
SAI2.AFRCR.FSPOL: 0
SAI2.AFRCR.FSDEF: 1
SAI2.AFRCR.FSALL[6:0]: 0xf
SAI2.AFRCR.FRL[7:0]: 0x1f
SAI2.ASLOTR.SLOTEN[15:0]: 3
SAI2.ASLOTR.NBSLOT[3:0]: 1
SAI2.ASLOTR.SLOTSZ[1:0]: 1
SAI2.ASLOTR.FBOFF[4:0]: 0
SAI2.AIM.LFSDET: 0
SAI2.AIM.AFSDETIE: 0
SAI2.AIM.CNRDYIE: 0
SAI2.AIM.FREQIE: 0
SAI2.AIM.WCKCFG: 1
SAI2.AIM.MUTEDET: 0
SAI2.AIM.OVRUDRIE: 1
SAI2.ASR.FLVL[2:0]: 2
SAI2.ASR.LFSDET: 0
SAI2.ASR.AFSDET: 0
SAI2.ASR.CNRDY: 0
SAI2.ASR.FREQ: 0
SAI2.ASR.WCKCFG: 0
SAI2.ASR.MUTEDET: 0
SAI2.ASR.OVRUDR: 0
SAI2.ACLRFR.LFSDET: 0
SAI2.ACLRFR.CAFSDET: 0
SAI2.ACLRFR.CNRDY: 0
SAI2.ACLRFR.WCKCFG: 0
SAI2.ACLRFR.MUTEDET: 0
SAI2.ACLRFR.OVRUDR: 0
SAI2.ADR.DATA[31:0]: 0

DMA2_3 used:

DMA2.CCR3.MEM2MEM: 0
DMA2.CCR3.PL[1:0]: 2
DMA2.CCR3.MSIZE[1:0]: 1
DMA2.CCR3.PSIZE[1:0]: 1
DMA2.CCR3.MINC: 1
DMA2.CCR3.PINC: 0
DMA2.CCR3.CIRC: 1
DMA2.CCR3.DIR: 1
DMA2.CCR3.TEIE: 1
DMA2.CCR3.HTIE: 1
DMA2.CCR3.TCIE: 1
DMA2.CCR3.EN: 1
DMA2.CNDTR3.NDT[15:0]: 0x65
DMA2.CPAR3.PA[31:0]: 0x40015820
DMA2.CMAR3.MA[31:0]: 0x20000770

/.share/CACHEDEV1_DATA/Ada/xml/logs2dump.rb -s /.share/CACHEDEV1_DATA/Ada/xml/STM32L4x6.svd -Orcc,sai2,dma2 >slim.txt

on master:
(gdb) x/3x 0x1fff7590
0x1fff7590:	0x001a0030	0x48345019	0x20323150

on slave:
(gdb)  x/3x 0x1fff7590
0x1fff7590:	0x002c0046	0x4d34500b	0x20303041

1774 regs:        64     65       x      x      68       69      70       x
0x20010000:	0x14	0x14	0x40	0x40	0x3f	0x3f	0x01	0x00
                 72      73      74      75      x       77        x     x
0x20010008:	0x03	0xec	0x01	0x00	0x00	0x0c	0x00	0x00
                 80      81      82       x      84      85      86      87
0x20010010:	0x00	0x00	0x30	0x00	0x01	0x00	0x01	0x00
                 88      89      90       x      92      93      94      95
0x20010018:	0x11	0x00	0x00	0x00	0x00	0x00	0x00	0x00
                 96      -       -       -       -       -       -       -
0x20010020:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
                 -       -       -       -       -       -       -       -
0x20010028:	0x00	0x00	0x00	0x00	0x13	0x00	0x00	0x00
                 -       -       -       -       -       -       -       -
0x20010030:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
                 -       -       -       -       124     125      -       -
0x20010038:	0x00	0x00	0x00	0x00	0x00	0x1c	0xf1	0x76


Register 64 40h Volume for HPA (L-ch) RSV HMUL HLV5 HLV4 HLV3 HLV2 HLV1 HLV0
Register 65 41h Volume for HPA (R-ch) RSV HMUR HRV5 HRV4 HRV3 HRV2 HRV1 HRV0
66
67
Register 68 44h DAC digital attenuation and soft mute (L-ch) RSV PMUL ATL5 ATL4 ATL3 ATL2 ATL1 ATL0
Register 69 45h DAC digital attenuation and soft mute (R-ch) RSV PMUR ATR5 ATR4 ATR3 ATR2 ATR1 ATR0
Register 70 46h DAC over sampling, de-emphasis, audio interface, DGC DEM1 DEM0 PFM1 PFM0 SPX1 SPX0 RSV OVER
Register 72 48h Analog mixer power up/down RSV RSV RSV RSV RSV RSV PMXR PMXL
Register 73 49h DAC and HPA power up/down PBIS PDAR PDAL RSV PHPR PHPL RSV RSV
Register 74 4Ah Analog output configuration select RSV RSV RSV RSV HPS1 HPS0 RSV PCOM
Register 75 4Bh HPA insertion detection, short protection RSV RSV RSV RSV SDHR SDHL RSV RSV
Register 77 4Dh Shut down status read back RSV RSV RSV RSV STHR STHL RSV RSV
Register 82 52h PG1, 2, 5, 6, power up/down RSV RSV PAIR PAIL RSV RSV RSV RSV
Register 84 54h Master mode RSV RSV RSV RSV RSV MSTR RSV BIT0
Register 85 55h System reset, sampling rate control, data swap SRST LRPC NPR5 NPR4 NPR3 NPR2 NPR1 NPR0
Register 86 56h BCK configuration, sampling rate control, zero-cross MBST MSR2 MSR1 MSR0 RSV RSV RSV ZCRS
Register 87 57h Analog input select (MUX1, 2, 3, 4) RSV RSV AIR1 AIR0 RSV RSV AIL1 AIL0
Register 88 58h Analog mixing switch (SW1, 2, 3, 4, 5, 6) RSV MXR2 MXR1 MXR0 RSV MXL2 MXL1 MXL0
Register 89 59h Analog to analog path (PG5, 6) gain RSV GMR2 GMR1 GMR0 RSV GML2 GML1 GML0
Register 90 5Ah Microphone boost RSV RSV RSV RSV RSV RSV G20R G20L
Register 92 5Ch Bass boost gain level LPAE RSV RSV LGA4 LGA3 LGA2 LGA1 LGA0
Register 93 5Dh Middle boost gain level RSV RSV RSV MGA4 MGA3 MGA2 MGA1 MGA0
Register 94 5Eh Treble boost gain level RSV RSV RSV HGA4 HGA3 HGA2 HGA1 HGA0
Register 95 5Fh Sound effect source select, 3D sound RSV 3DEN RSV 3FL0 3DP3 3DP2 3DP1 3DP0
Register 96 60h digital monaural mixing RSV RSV RSV RSV RSV RSV RSV MXEN
Register 124 7Ch PG1/PG2 additional Gain RSV RSV RSV RSV RSV RSV G12R G12L
Register 125 7Dh Power up/down time control RSV PTM1 PTM0 RES4 RES3 RES2 RES1 RES0



attribvals (4)
compass 2 ** 6
activity recog 2 ** 4
carry pos 2 ** 3
mems gesture 2 ** 1


#payload format for env
# env is serv c char d
pressure      hum       T1      T2
b6 8d 01 00 | 68 01 | 09 01 | 06 01 |


quaternions
char 0x19
   Q0X    Q0Y      Q0Z    Q1X      Q1Y      Q1Z    Q2X     Q2Y     Q2Z
| b5 f5 | dd e3 | 23 f5 | b4 f5 | e0 e3 | 22 f5 |  b3 f5 | e3 e3 | 22 f5
   Q0X    Q0Y      Q0Z    Q1X      Q1Y      Q1Z    Q2X     Q2Y     Q2Z
| 98 f5 | 19 e4 | 2a f5 | 98 f5 | 18 e4 | 2a f5 | 98 f5 | 18 e4 | 2a f5 |

accel+gyro+mag
char 0x10
 AX       AY      AZ     GX      GY     GZ      MX      MY      MZ
35 fc | 5a ff | ab 00 | ff ff | ed ff |06 00 | 9c ff | 23 02 | f3 00


-----
hts221 after ST inits:

0x00	0
0x00	1
0x00	2
0x00	3
0x00	4
0x00	5
0x00	6
0x00	7
0x00	8
0x00	9
0x00	10
0x00	11
0x00	12
0x00	13
0x00	14
0xbc	15  correct
0x3f	16 *
0x00	17
0x66	18
0x32	19
0x96	20
0xbe	21
0xc8	22
0xa1	23
0x9e	24
0xb2	25
0xf7	26
0x00	27
0xe0	28
0x01	29
0x00	30
0x9e	31
0x05	32 *
0x00	33 -
0x00	34 -
0x00	35
0x00	36
0x00	37
0x00	38
0x03	39
0xd6	40
0x03	41
0xd6	42
0x01	43
0xfa	44
0x05	45
0xf6	46
0x01	47
0x3a	48
0x85	49
0xa7	50
0x09	51
0x00	52
0xc4	53
0xfa	54
0xff	55
0x36	56
0x03	57
0xe0	58
0xd3	59
0xfd	60
0xff	61
0xae	62
0x02	63


303 ACC no init...
303 MAG

0x00	0x40
0x00	0x41
0x00	0x42
0x00	0x43
0x00	0x44
0x00	0x45
0x00	0x46
0x00	0x47
0x00	0x48
0x00	0x49
0x00	0x4a
0x00	0x4b
0x00	0x4c
0x00	0x4d
0x00	0x4e
0x40	0x4f
0x75	0x50 *
0x33	0x51 *
0x51	0x52 *
0x2a	0x53 *
0xee	0x54 *
0x12	0x55 *
0x62	0x56 *
0x01	0x57 *
0x01	0x58 *
0x41	0x59 *
0x41	0x5a *
0xfa	0x5b *
0x82	0x5c *
0xfe	0x5d *
0x00	0x5e *
0x00	0x5f *
0x0e	0x60
0x00	0x61
0x31	0x62
0xe0	0x63
0x00	0x64
0x00	0x65
0x00	0x66
0xff	0x67
0xac	0x68
0xff	0x69
0x5d	0x6a
0x01	0x6b
0xb6	0x6c
0x00	0x6d


lsm6dsm
0x00	0x0
0x00	0x1
0x00	0x2
0x00	0x3
0x00	0x4
0x00	0x5
0x00	0x6
0x00	0x7
0x00	0x8
0x00	0x9
0x00	0xa
0x00	0xb
0x00	0xc
0x00	0xd
0x00	0xe
0x6a	0xf
0x00	0x10
0x4c	0x11
0x4c	0x12
0x04	0x13
0x00	0x14
0x00	0x15
0x00	0x16
0x00	0x17
0xe0	0x18
0x00	0x19
0x00	0x1a
0x00	0x1b
0x00	0x1c
0x00	0x1d
0x07	0x1e
0xc2	0x1f
0xd8	0x20
0xff	0x21
0xff	0x22
0xff	0x23
0xe5	0x24
0xff	0x25
0x09	0x26
0x00	0x27
0x89	0x28
0xc0	0x29
0xd5	0x2a
0xfe	0x2b
0xcd	0x2c
0x07	0x2d
0x00	0x2e
0x00	0x2f
0x00	0x30
0x00	0x31
0x00	0x32
0x00	0x33
0x00	0x34
0x00	0x35
0x00	0x36
0x00	0x37
0x00	0x38
0x00	0x39
0x00	0x3a
0x10	0x3b
0x00	0x3c
0x00	0x3d
0xff	0x3e
0xff	0x3f
0x00	0x40
0x00	0x41
0x00	0x42
0x00	0x43
0x00	0x44
0x00	0x45
0x00	0x46
0x00	0x47
0x00	0x48
0x00	0x49
0x00	0x4a
0x00	0x4b
0x00	0x4c
0x00	0x4d
0x00	0x4e
0x00	0x4f
0x00	0x50
0x00	0x51
0x00	0x52
0x00	0x53
0x84	0x54
0x00	0x55
0x00	0x56
0x00	0x57
0x00	0x58
0x00	0x59
0x00	0x5a
0x00	0x5b
0x00	0x5c
0x00	0x5d
0x00	0x5e
0x00	0x5f
0x00	0x60
0x00	0x61
0x00	0x62
0x00	0x63
0x00	0x64
0xff	0x65
0x00	0x66
0x00	0x67
0x00	0x68
0x00	0x69
0x00	0x6a
0x00	0x6b
0x00	0x6c
0x00	0x6d
0x00	0x6e
0x00	0x6f
0x00	0x70
0x00	0x71
0x00	0x72
0x00	0x73
0x00	0x74
0x00	0x75


  { int i;
      extern void logger(uint32_t c);
      logger(0xcc);
      for(i = 0x0; i < 0x40;i++) {
	  uint8_t x;
	  LSM303AGR_ACC_ReadReg(handle, i, &x, 1);
	  logger(x);
      }
  }

TIM1 CC4 is used in compare more for acc/gyro/mag updates.
It comes out to 200ticks in 10sec or 20hz update rate.
in main.h...

//10kHz/20  For Acc/Gyro/Mag@20Hz
#define DEFAULT_uhCCR4_Val  500
